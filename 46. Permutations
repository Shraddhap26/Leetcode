Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.

Example 1:

Input: nums = [1,2,3]
Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]
Example 2:

Input: nums = [0,1]
Output: [[0,1],[1,0]]
Example 3:

Input: nums = [1]
Output: [[1]]

Code: 
class Solution {

    private:
    void solve(vector<int> num,vector<vector<int>>& ans,int index){
        if(index>=num.size()){
            ans.push_back(num);
            return;
        }
        for(int i=index;i<num.size();i++){
            swap(num[index],num[i]);
            solve(num,ans,index+1);
            //Backtrack
            swap(num[index],num[i]);
        }
    }
public:
    vector<vector<int>> permute(vector<int>& nums) {
     vector<vector<int>> ans;
     int index=0;
     solve(nums,ans,index);
     return ans;   
    }
};
